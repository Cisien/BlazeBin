@using BlazeBin.Shared
@inject IConfiguration appConfig
@inject BlazeBinConfiguration config
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0" />
    <meta name="description" content="A tool for sharing your source code with the world!" />
    <title>BlazeBin Basic@( string.IsNullOrWhiteSpace(@ViewData["Title"]?.ToString()) ? "" : $" - {ViewData["Title"]}")</title>
    <base href="~/" />
    @{
        var key = appConfig["ApplicationInsights:InstrumentationKey"];
    }
    @if (!Context.Request.Headers.ContainsKey("DNT") && !string.IsNullOrWhiteSpace(key))
    {
        <script type="text/javascript">
             !function(e,t,n){var r="script",a="undefined",i="crossOrigin",o=n.name||"appInsights";(n.name||e.appInsightsSDK)&&(e.appInsightsSDK=o);var c=e[o]||function(o){var c=!1,u=!1,s={initialize:!0,queue:[],sv:"5",version:2,config:o},p=o.url||n.src;if(p){function l(e){c=!0,s.queue=[],u||(u=!0,_reportFailure(p))}function d(e,t){u||setTimeout(function(){!t&&s.core||l()},500)}var f=function(){var e=t.createElement(r);e.src=p;var o=n[i];return!o&&""!==o||e[i]==a||(e[i]=o),e.onload=d,e.onerror=l,e.onreadystatechange=function(t,n){"loaded"!==e.readyState&&"complete"!==e.readyState||d(0,n)},e}();if(n.ld<0)t.getElementsByTagName("head")[0].appendChild(f);else setTimeout(function(){t.getElementsByTagName(r)[0].parentNode.appendChild(f)},n.ld||0)}try{s.cookie=t.cookie}catch(e){}function g(e){for(;e.length;)!function(e){s[e]=function(){var t=arguments;c||s.queue.push(function(){s[e].apply(s,t)})}}(e.pop())}g(["trackEvent","trackPageView","trackException","trackTrace","trackDependencyData","trackMetric","trackPageViewPerformance","startTrackPage","stopTrackPage","startTrackEvent","stopTrackEvent","addTelemetryInitializer","setAuthenticatedUserContext","clearAuthenticatedUserContext","flush"]),s.SeverityLevel={Verbose:0,Information:1,Warning:2,Error:3,Critical:4};var m=(o.extensionConfig||{}).ApplicationInsightsAnalytics||{};if(!0!==o.disableExceptionTracking&&!0!==m.disableExceptionTracking){g(["_onerror"]);var v=e.onerror;e.onerror=function(t,n,r,a,i){var o=v&&v(t,n,r,a,i);return!0!==o&&s._onerror({message:t,url:n,lineNumber:r,columnNumber:a,error:i,evt:e.event}),o},o.autoExceptionInstrumented=!0}return s}(n.cfg);function u(){n.onInit&&n.onInit(c)}e[o]=c,c.queue&&0===c.queue.length?(c.queue.push(u),c.trackPageView({})):u()}(window,document,{
                 src:"https://js.monitor.azure.com/scripts/b/ai.2.min.js",
                 cfg:{
                     instrumentationKey: '@key',
                     disableFetchTracking: false,
                     enableCorsCorrelation: true,
                     enableRequestHeaderTracking: true,
                     enableResponseHeaderTracking: true,
                     enableAutoRouteTracking: true
                 }
            });
        </script>
    }
    <link href="@(config.Client.ContentRoot)css/application.css" rel="stylesheet" asp-append-version="true" />
    <link href="@(config.Client.ContentRoot)css/basic.css" rel="stylesheet" asp-append-version="true" />
</head>
<body>
    @RenderBody()
    <footer>
        <div class="banner">
            ⚠️<span>Notice: Content posted here will be deleted after 30 days!</span>
        </div>
        <div class="policy-container">
            @if (config.Client.AcceptableUsePolicyUrl != null)
            {
                <a href="@config.Client.AcceptableUsePolicyUrl">Acceptable Use Policy</a>
            }

            @if (config.Client.PrivacyPolicyUrl != null)
            {
                <a href="@config.Client.PrivacyPolicyUrl">Privacy Policy</a>
            }

            @if (config.Client.GeneralPolicyUrl != null)
            {
                <a href="@config.Client.GeneralPolicyUrl" title="View all policy documents on GitHub">View on GitHub</a>
            }
        </div>
    </footer>
</body>
</html>
