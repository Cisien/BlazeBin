@inject BlazeBinStateContainer state;
@inject ILogger<App> logger;
@implements IDisposable

<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    JsonSerializerOptions stateOptions = new JsonSerializerOptions { IncludeFields = true, IgnoreReadOnlyFields = false };
    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await state.Dispatch(() => state.InitializeUploadLists());
        await base.SetParametersAsync(parameters);
    }

    public void Dispose()
    {
        GC.SuppressFinalize(this);
    }
}
